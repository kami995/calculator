{"version":3,"sources":["index.js"],"names":["Calculator","props","handleOperators","o","setState","lastPressed","isDecimal","includes","state","formula","display","limit","undefined","this","console","log","x","length","alert","izraz","rezultat","parseFloat","eval","toFixed","id","onClick","handleNumbers","handleDecimal","clear","izracunaj","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d9fb549.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\n\r\nclass Calculator extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            formula: '',\r\n            display: '0',\r\n            isDecimal: false,\r\n            limit: false,\r\n            lastPressed: undefined\r\n        }\r\n    }\r\n\r\n    handleDecimal(){\r\n        if(this.state.isDecimal || this.state.limit || this.state.lastPressed === '+'\r\n            || this.state.lastPressed === '-' || this.state.lastPressed === '*' || this.state.lastPressed === '/'){\r\n            console.log(\"Number is already decimal\");\r\n        } else {\r\n            this.setState({\r\n                display: this.state.display + '.',\r\n                isDecimal: true\r\n            })\r\n        }\r\n    }\r\n\r\n    handleOperators = (o) => {\r\n        this.setState({lastPressed: o, isDecimal: false})\r\n        \r\n        switch(o){\r\n            case '+':\r\n            case '/':\r\n            case '*':\r\n                {\r\n                    if(['0','1','2','3','4','5','6','7','8','9'].includes(this.state.lastPressed)){\r\n                        this.setState({\r\n                            formula: this.state.formula + this.state.display,\r\n                            display: o,\r\n                        })\r\n                    } else if(['+','-','*','/'].includes(this.state.lastPressed)){\r\n                        this.setState({\r\n                            display: o\r\n                        })\r\n                    } else if(this.state.lastPressed === '='){\r\n                        this.setState({\r\n                            formula: this.state.display,\r\n                            display: o\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            formula: '',\r\n                            display: o\r\n                        })\r\n                    }\r\n                }\r\n            break;\r\n            case '-':\r\n                {\r\n                    if(['0','1','2','3','4','5','6','7','8','9'].includes(this.state.lastPressed)){\r\n                        this.setState({\r\n                            formula: this.state.formula + this.state.display,\r\n                            display: o,\r\n                        })\r\n                    } else if(['+','*','/'].includes(this.state.lastPressed)){\r\n                        this.setState({\r\n                            display: this.state.display + o\r\n                        })\r\n                    } else if(this.state.lastPressed === '='){\r\n                        this.setState({\r\n                            formula: this.state.display,\r\n                            display: o\r\n                        })\r\n                    } else if(this.state.lastPressed === '-'){\r\n                        this.setState({\r\n                            display: o\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            formula: '',\r\n                            display: o\r\n                        })\r\n                    }             \r\n                }\r\n            break;\r\n        }        \r\n    }\r\n\r\n    handleNumbers(x){\r\n        if(this.state.display.length >= 16 || this.state.formula.length >= 16){\r\n            alert(\"Limit reached\");\r\n            this.setState({\r\n                limit: true\r\n            })\r\n        }\r\n        if(this.state.limit === true){\r\n            this.setState({\r\n                display: this.state.display,\r\n                formula: this.state.formula,\r\n                lastPressed: x\r\n            });\r\n        } else {\r\n            if(this.state.lastPressed === '='){\r\n                this.setState({\r\n                    formula: '',\r\n                    display: x,\r\n                    isDecimal: false,\r\n                    limit: false,\r\n                    lastPressed: x\r\n                });\r\n            } else if(this.state.lastPressed === undefined){\r\n                this.setState({\r\n                    display: x,\r\n                    lastPressed: x\r\n                })\r\n            } else {\r\n                if(this.state.display === '0'){\r\n                    this.setState({\r\n                        display: x,\r\n                        lastPressed: x\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        display: this.state.display + x,\r\n                        lastPressed: x\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    clear(){\r\n        this.setState({\r\n            formula: '',\r\n            display: '0',\r\n            isDecimal: false,\r\n            limit: false,\r\n            lastPressed: '0'\r\n        });\r\n    }\r\n\r\n    izracunaj(){\r\n        let izraz = this.state.formula + this.state.display;\r\n        let rezultat = parseFloat(eval(izraz).toFixed(5));\r\n\r\n        this.setState({\r\n            formula: izraz + '=',\r\n            display: rezultat,\r\n            lastPressed: '='\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"calculator\">\r\n                <div id=\"DISPLEJ\">\r\n                    <div id=\"formula\">{this.state.formula}</div>                    \r\n                    <div id=\"display\">{this.state.display}</div>\r\n                </div>\r\n                <div onClick={() => this.handleNumbers('7')} id=\"seven\">7</div>\r\n                <div onClick={() => this.handleNumbers('8')} id=\"eight\">8</div>\r\n                <div onClick={() => this.handleNumbers('9')} id=\"nine\">9</div>\r\n                <div onClick={() => this.handleNumbers('4')} id=\"four\">4</div>\r\n                <div onClick={() => this.handleNumbers('5')} id=\"five\">5</div>\r\n                <div onClick={() => this.handleNumbers('6')} id=\"six\">6</div>\r\n                <div onClick={() => this.handleNumbers('1')} id=\"one\">1</div>\r\n                <div onClick={() => this.handleNumbers('2')} id=\"two\">2</div>\r\n                <div onClick={() => this.handleNumbers('3')} id=\"three\">3</div>\r\n                <div onClick={() => this.handleNumbers('0')} id=\"zero\">0</div>\r\n                <div onClick={() => this.handleDecimal()} id=\"decimal\">.</div>\r\n                <div id=\"clear\" onClick={() => this.clear()}>AC</div>\r\n                <div id=\"equals\" onClick={() => this.izracunaj()}>=</div>\r\n                <div onClick={() => this.handleOperators('+')} id=\"add\">+</div>\r\n                <div onClick={() => this.handleOperators('-')} id=\"subtract\">-</div>\r\n                <div onClick={() => this.handleOperators('*')} id=\"multiply\">*</div>\r\n                <div onClick={() => this.handleOperators('/')} id=\"divide\">/</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Calculator />, document.getElementById('root')\r\n)"],"sourceRoot":""}